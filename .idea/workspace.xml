<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="91a8b992-9fd7-4f47-9806-bed6c8174cb9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/order/model/Order.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/order/repository/OrderRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/java/com/example/order/resource/OrderResource.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Order-Service/src/main/resources/db/changelog/db.changelog-master.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/src/main/java/com/example/warehouse/model/Product.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/src/main/java/com/example/warehouse/repository/ProductRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/src/main/java/com/example/warehouse/resource/WarehouseResource.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Warehouse-Service/src/main/resources/db/changelog/db.changelog-master.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2pUkOCnB3hhD1ZZh9lIpfShmnvw" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.Order-Service/Dockerfile.executor": "Run",
    "Docker.Warehouse-Service/Dockerfile.executor": "Run",
    "Docker.docker-compose.yml.db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.order-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.warehouse-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "xml.defaultSchemas",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Docker.Warehouse-Service/Dockerfile">
    <configuration name="Order-Service" type="QuarkusRunConfigurationType" factoryName="Quarkus" nameIsGenerated="true">
      <module name="Order-Service" />
      <QsMavenRunConfiguration>
        <MavenSettings>
          <option name="myGeneralSettings" />
          <option name="myRunnerSettings" />
          <option name="myRunnerParameters">
            <MavenRunnerParameters>
              <option name="cmdOptions" />
              <option name="profiles">
                <set />
              </option>
              <option name="goals">
                <list>
                  <option value="quarkus:dev" />
                </list>
              </option>
              <option name="multimoduleDir" />
              <option name="pomFileName" value="pom.xml" />
              <option name="profilesMap">
                <map />
              </option>
              <option name="projectsCmdOptionValues">
                <list />
              </option>
              <option name="resolveToWorkspace" value="false" />
              <option name="workingDirPath" value="$PROJECT_DIR$/Order-Service" />
            </MavenRunnerParameters>
          </option>
        </MavenSettings>
        <targetMavenLocalRepo />
        <emulateTerminal>false</emulateTerminal>
        <profile>dev</profile>
      </QsMavenRunConfiguration>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Warehouse-Service" type="QuarkusRunConfigurationType" factoryName="Quarkus" nameIsGenerated="true">
      <module name="Warehouse-Service" />
      <QsMavenRunConfiguration>
        <MavenSettings>
          <option name="myGeneralSettings" />
          <option name="myRunnerSettings" />
          <option name="myRunnerParameters">
            <MavenRunnerParameters>
              <option name="cmdOptions" />
              <option name="profiles">
                <set />
              </option>
              <option name="goals">
                <list>
                  <option value="quarkus:dev" />
                </list>
              </option>
              <option name="multimoduleDir" />
              <option name="pomFileName" value="pom.xml" />
              <option name="profilesMap">
                <map />
              </option>
              <option name="projectsCmdOptionValues">
                <list />
              </option>
              <option name="resolveToWorkspace" value="false" />
              <option name="workingDirPath" value="$PROJECT_DIR$/Warehouse-Service" />
            </MavenRunnerParameters>
          </option>
        </MavenSettings>
        <targetMavenLocalRepo />
        <emulateTerminal>false</emulateTerminal>
        <profile>dev</profile>
      </QsMavenRunConfiguration>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Order-Service/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="Order-Service/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Warehouse-Service/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="Warehouse-Service/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.order-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="order-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.warehouse-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="warehouse-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Warehouse-Service/Dockerfile" />
        <item itemvalue="Docker.Order-Service/Dockerfile" />
        <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.warehouse-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23726.103" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23726.103" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="91a8b992-9fd7-4f47-9806-bed6c8174cb9" name="Changes" comment="" />
      <created>1732828008090</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1732828008090</updated>
      <workItem from="1732828009045" duration="7827000" />
      <workItem from="1732838013674" duration="8000" />
      <workItem from="1732838319096" duration="16114000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>